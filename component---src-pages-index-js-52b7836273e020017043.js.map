{"version":3,"sources":["webpack://dtjv.github.io/./src/components/Post.js","webpack://dtjv.github.io/./src/components/Posts.js","webpack://dtjv.github.io/./src/pages/index.js"],"names":["ShortPost","post","title","date","description","slug","key","className","dateTime","Date","Link","to","aria-label","H2","Post","excerpt","dangerouslySetInnerHTML","__html","Posts","posts","short","length","map","useStaticQuery","site","projects","images","articles","edges","node","frontmatter","fields","code","id","name","repoUrl","liveUrl","tech","image","find","base","screenshot","siteMetadata","link","text"],"mappings":"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","file":"component---src-pages-index-js-52b7836273e020017043.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { H2 } from './Headings'\n\nconst ShortPost = ({ post }) => {\n  const { title, date, description, slug } = post\n\n  return (\n    <li key={slug} className=\"py-6\">\n      <article className=\"space-y-2\">\n        <dl>\n          <dt className=\"sr-only\">Published on</dt>\n          <dd className=\"text-sm font-medium text-gray-500 leading-6\">\n            <time dateTime={Date(date)}>{date}</time>\n          </dd>\n        </dl>\n        <Link\n          to={slug}\n          className=\"inline-block hover:underline\"\n          aria-label={`Read \"${title}\"`}\n        >\n          <H2>{title}</H2>\n        </Link>\n        <p className=\"text-gray-500\">{description}</p>\n      </article>\n    </li>\n  )\n}\n\nconst Post = ({ post }) => {\n  const { title, date, slug, excerpt } = post\n\n  return (\n    <li key={slug} className=\"py-12\">\n      <article className=\"space-y-2\">\n        <dl>\n          <dt className=\"sr-only\">Published on</dt>\n          <dd className=\"text-base font-medium text-gray-500 leading-6\">\n            <time dateTime={Date(date)}>{date}</time>\n          </dd>\n        </dl>\n        <div className=\"space-y-5\">\n          <div className=\"space-y-6\">\n            <Link to={slug} aria-label={`Read \"${title}\"`}>\n              <H2>{title}</H2>\n            </Link>\n            <div\n              className=\"text-gray-500 prose max-w-none\"\n              dangerouslySetInnerHTML={{ __html: excerpt }}\n            />\n          </div>\n          <div>\n            <Link\n              to={slug}\n              className=\"text-base font-bold text-blue-600 no-underline hover:text-blue-400\"\n              aria-label={`Read \"${title}\"`}\n            >\n              <span className=\"mr-1\">Read article -&gt;</span>\n            </Link>\n          </div>\n        </div>\n      </article>\n    </li>\n  )\n}\n\nexport { Post, ShortPost }\n","import React from 'react'\n\nimport { Post, ShortPost } from './Post'\n\nconst Posts = ({ posts = [], short }) => {\n  if (!posts.length) return null\n\n  return (\n    <ul className=\"divide-y divide-gray-200\">\n      {posts.map((post) =>\n        short ? (\n          <ShortPost key={post.slug} post={post} />\n        ) : (\n          <Post key={post.slug} post={post} />\n        )\n      )}\n    </ul>\n  )\n}\n\nexport { Posts }\n","import React from 'react'\nimport { graphql, useStaticQuery, Link } from 'gatsby'\n\nimport { Layout } from '../components/Layout'\nimport { SEO } from '../components/SEO'\nimport { Posts } from '../components/Posts'\nimport { Projects } from '../components/Projects'\nimport { Section } from '../components/Section'\nimport { Container } from '../components/Container'\n\nconst query = graphql`\n  query {\n    posts: allMdx(\n      limit: 3\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { template: { eq: \"post\" }, draft: { ne: true } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMM DD\")\n            description\n          }\n        }\n      }\n    }\n    projects: allMdx(\n      sort: { fields: [frontmatter___id], order: ASC }\n      filter: { frontmatter: { template: { eq: \"project\" } } }\n    ) {\n      edges {\n        node {\n          fields {\n            excerpt\n          }\n          frontmatter {\n            name\n            id\n            repoUrl\n            liveUrl\n            tech\n            screenshot\n          }\n        }\n      }\n    }\n    images: allFile(filter: { extension: { regex: \"/(jpg)|(png)|(jpeg)/\" } }) {\n      edges {\n        node {\n          base\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n\nconst IndexPage = () => {\n  const { site, posts, projects, images } = useStaticQuery(query)\n  const articles = posts.edges.map(({ node }) => ({\n    title: node.frontmatter.title,\n    date: node.frontmatter.date,\n    description: node.frontmatter.description,\n    slug: node.fields.slug,\n  }))\n  const code = projects.edges.map(({ node }) => ({\n    id: node.frontmatter.id,\n    name: node.frontmatter.name,\n    repoUrl: node.frontmatter.repoUrl,\n    liveUrl: node.frontmatter.liveUrl,\n    tech: node.frontmatter.tech,\n    excerpt: node.fields.excerpt,\n    image: images.edges.find(\n      (image) => image.node.base === node.frontmatter.screenshot\n    ),\n  }))\n\n  return (\n    <Layout>\n      <SEO title={site.siteMetadata.title} />\n      <Container>\n        <p className=\"text-xl text-gray-500 sm:text-2xl prose max-w-none\">\n          Hello! I'm David, a software developer based in Oregon. On this\n          website I share my <Link to=\"/articles\">thoughts</Link> about\n          programming and a few side <Link to=\"/projects\">projects</Link> I've\n          built.\n        </p>\n      </Container>\n      <Section title=\"Articles\" link={{ to: '/articles', text: 'View all' }}>\n        <Posts posts={articles} short />\n      </Section>\n      <Section\n        id=\"projects\"\n        title=\"Projects\"\n        link={{ to: '/projects', text: 'View all' }}\n      >\n        <Projects projects={code} />\n      </Section>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}