{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/Post.js","webpack:///./src/components/Posts.js"],"names":["IndexPage","useStaticQuery","site","posts","projects","images","articles","edges","map","node","title","frontmatter","date","description","slug","fields","code","id","name","repoUrl","liveUrl","tech","excerpt","image","find","base","screenshot","siteMetadata","className","to","link","text","short","ShortPost","post","key","dateTime","Date","aria-label","Post","dangerouslySetInnerHTML","__html","Posts","length"],"mappings":"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","file":"component---src-pages-index-js-a4ae210e8077ad2ddbab.js","sourcesContent":["import React from 'react'\nimport { graphql, useStaticQuery, Link } from 'gatsby'\n\nimport { Layout } from '../components/Layout'\nimport { SEO } from '../components/SEO'\nimport { Posts } from '../components/Posts'\nimport { Projects } from '../components/Projects'\nimport { Section } from '../components/Section'\nimport { Container } from '../components/Container'\n\nconst query = graphql`\n  query {\n    posts: allMdx(\n      limit: 3\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { template: { eq: \"post\" }, draft: { ne: true } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMM DD\")\n            description\n          }\n        }\n      }\n    }\n    projects: allMdx(\n      sort: { fields: [frontmatter___id], order: ASC }\n      filter: { frontmatter: { template: { eq: \"project\" } } }\n    ) {\n      edges {\n        node {\n          fields {\n            excerpt\n          }\n          frontmatter {\n            name\n            id\n            repoUrl\n            liveUrl\n            tech\n            screenshot\n          }\n        }\n      }\n    }\n    images: allFile(filter: { extension: { regex: \"/(jpg)|(png)|(jpeg)/\" } }) {\n      edges {\n        node {\n          base\n          childImageSharp {\n            fluid(quality: 75) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n\nconst IndexPage = () => {\n  const { site, posts, projects, images } = useStaticQuery(query)\n  const articles = posts.edges.map(({ node }) => ({\n    title: node.frontmatter.title,\n    date: node.frontmatter.date,\n    description: node.frontmatter.description,\n    slug: node.fields.slug,\n  }))\n  const code = projects.edges.map(({ node }) => ({\n    id: node.frontmatter.id,\n    name: node.frontmatter.name,\n    repoUrl: node.frontmatter.repoUrl,\n    liveUrl: node.frontmatter.liveUrl,\n    tech: node.frontmatter.tech,\n    excerpt: node.fields.excerpt,\n    image: images.edges.find(\n      (image) => image.node.base === node.frontmatter.screenshot\n    ),\n  }))\n\n  return (\n    <Layout>\n      <SEO title={site.siteMetadata.title} />\n      <Container>\n        <p className=\"text-xl text-gray-500 sm:text-2xl prose max-w-none\">\n          Hello! I'm David, a software developer based in Oregon. On this\n          website I share my <Link to=\"/articles\">thoughts</Link> about\n          programming and a few side <Link to=\"/projects\">projects</Link> I've\n          built.\n        </p>\n      </Container>\n      <Section title=\"Articles\" link={{ to: '/articles', text: 'View all' }}>\n        <Posts posts={articles} short />\n      </Section>\n      <Section\n        id=\"projects\"\n        title=\"Projects\"\n        link={{ to: '/projects', text: 'View all' }}\n      >\n        <Projects projects={code} />\n      </Section>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { H2 } from './Headings'\n\nconst ShortPost = ({ post }) => {\n  const { title, date, description, slug } = post\n\n  return (\n    <li key={slug} className=\"py-6\">\n      <article className=\"space-y-2\">\n        <dl>\n          <dt className=\"sr-only\">Published on</dt>\n          <dd className=\"text-sm font-medium text-gray-500 leading-6\">\n            <time dateTime={Date(date)}>{date}</time>\n          </dd>\n        </dl>\n        <Link\n          to={slug}\n          className=\"inline-block hover:underline\"\n          aria-label={`Read \"${title}\"`}\n        >\n          <H2>{title}</H2>\n        </Link>\n        <p className=\"text-gray-500\">{description}</p>\n      </article>\n    </li>\n  )\n}\n\nconst Post = ({ post }) => {\n  const { title, date, slug, excerpt } = post\n\n  return (\n    <li key={slug} className=\"py-12\">\n      <article className=\"space-y-2\">\n        <dl>\n          <dt className=\"sr-only\">Published on</dt>\n          <dd className=\"text-base font-medium text-gray-500 leading-6\">\n            <time dateTime={Date(date)}>{date}</time>\n          </dd>\n        </dl>\n        <div className=\"space-y-5\">\n          <div className=\"space-y-6\">\n            <Link to={slug} aria-label={`Read \"${title}\"`}>\n              <H2>{title}</H2>\n            </Link>\n            <div\n              className=\"text-gray-500 prose max-w-none\"\n              dangerouslySetInnerHTML={{ __html: excerpt }}\n            />\n          </div>\n          <div>\n            <Link\n              to={slug}\n              className=\"text-base font-bold text-blue-600 no-underline hover:text-blue-400\"\n              aria-label={`Read \"${title}\"`}\n            >\n              <span className=\"mr-1\">Read article -&gt;</span>\n            </Link>\n          </div>\n        </div>\n      </article>\n    </li>\n  )\n}\n\nexport { Post, ShortPost }\n","import React from 'react'\n\nimport { Post, ShortPost } from './Post'\n\nconst Posts = ({ posts = [], short }) => {\n  if (!posts.length) return null\n\n  return (\n    <ul className=\"divide-y divide-gray-200\">\n      {posts.map((post) =>\n        short ? (\n          <ShortPost key={post.slug} post={post} />\n        ) : (\n          <Post key={post.slug} post={post} />\n        )\n      )}\n    </ul>\n  )\n}\n\nexport { Posts }\n"],"sourceRoot":""}