{"version":3,"sources":["webpack://dtjv.github.io/./src/components/Post.js","webpack://dtjv.github.io/./src/components/Posts.js","webpack://dtjv.github.io/./src/components/Section.js","webpack://dtjv.github.io/./src/pages/articles.js"],"names":["ShortPost","post","title","date","description","slug","key","className","dateTime","Date","Link","to","aria-label","H2","Post","excerpt","dangerouslySetInnerHTML","__html","Posts","posts","short","length","map","Section","link","children","props","H1","text","location","useStaticQuery","site","articles","edges","node","frontmatter","fields","siteMetadata"],"mappings":"oLAKMA,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACXC,EAAmCD,EAAnCC,MAAOC,EAA4BF,EAA5BE,KAAMC,EAAsBH,EAAtBG,YAAaC,EAASJ,EAATI,KAElC,OACE,sBAAIC,IAAKD,EAAME,UAAU,QACvB,2BAASA,UAAU,aACjB,0BACE,sBAAIA,UAAU,WAAd,gBACA,sBAAIA,UAAU,+CACZ,wBAAMC,SAAUC,KAAKN,IAAQA,KAGjC,gBAAC,EAAAO,KAAD,CACEC,GAAIN,EACJE,UAAU,+BACVK,aAAA,SAAqBV,EAArB,KAEA,gBAAC,EAAAW,GAAD,KAAKX,IAEP,qBAAGK,UAAU,iBAAiBH,MAMhCU,EAAO,SAAC,GAAc,IAAZb,EAAW,EAAXA,KACNC,EAA+BD,EAA/BC,MAAOC,EAAwBF,EAAxBE,KAAME,EAAkBJ,EAAlBI,KAAMU,EAAYd,EAAZc,QAE3B,OACE,sBAAIT,IAAKD,EAAME,UAAU,SACvB,2BAASA,UAAU,aACjB,0BACE,sBAAIA,UAAU,WAAd,gBACA,sBAAIA,UAAU,iDACZ,wBAAMC,SAAUC,KAAKN,IAAQA,KAGjC,uBAAKI,UAAU,aACb,uBAAKA,UAAU,aACb,gBAAC,EAAAG,KAAD,CAAMC,GAAIN,EAAMO,aAAA,SAAqBV,EAArB,KACd,gBAAC,EAAAW,GAAD,KAAKX,IAEP,uBACEK,UAAU,iCACVS,wBAAyB,CAAEC,OAAQF,MAGvC,2BACE,gBAAC,EAAAL,KAAD,CACEC,GAAIN,EACJE,UAAU,qEACVK,aAAA,SAAqBV,EAArB,KAEA,wBAAMK,UAAU,QAAhB,yBCtDRW,EAAQ,SAAC,GAA2B,IAAD,IAAxBC,aAAwB,MAAhB,GAAgB,EAAZC,EAAY,EAAZA,MAC3B,OAAKD,EAAME,OAGT,sBAAId,UAAU,4BACXY,EAAMG,KAAI,SAACrB,GAAD,OACTmB,EACE,gBAACpB,EAAD,CAAWM,IAAKL,EAAKI,KAAMJ,KAAMA,IAEjC,gBAACa,EAAD,CAAMR,IAAKL,EAAKI,KAAMJ,KAAMA,QARV,O,uHCCfsB,EAAU,SAAC,GAAD,IAAGrB,EAAH,EAAGA,MAAOsB,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,SAAaC,GAA7B,6CACrB,gBAAC,IAAcA,EACb,uBAAKnB,UAAU,uCACb,gBAAC,EAAAoB,GAAD,KAAKzB,IACJsB,aAAA,EAAAA,EAAMb,KACL,gBAAC,EAAAD,KAAD,CACEC,GAAIa,EAAKb,GACTJ,UAAU,+EACVK,aAAA,WAAuBY,EAAKb,IAE5B,4BAAOa,EAAKI,KAAZ,SAILH,K,uGCkCL,UAnBqB,SAAC,GAAkB,IAAhBI,EAAe,EAAfA,SAAe,GACVC,oBA5BlB,aA4BDC,EAD6B,EAC7BA,KACFZ,EAF+B,EACvBa,SACSC,MAAMX,KAAI,gBAAGY,EAAH,EAAGA,KAAH,MAAe,CAC9ChC,MAAOgC,EAAKC,YAAYjC,MACxBC,KAAM+B,EAAKC,YAAYhC,KACvBE,KAAM6B,EAAKE,OAAO/B,KAClBU,QAASmB,EAAKE,OAAOrB,YAGvB,OACE,gBAAC,IAAD,CAAQc,SAAUA,GAChB,gBAAC,IAAD,CAAK3B,MAAK,cAAgB6B,EAAKM,aAAanC,QAC5C,gBAAC,IAAD,CAASA,MAAM,YACb,gBAAC,IAAD,CAAOiB,MAAOA","file":"component---src-pages-articles-js-612972fe8c5691bcd96c.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { H2 } from './Headings'\n\nconst ShortPost = ({ post }) => {\n  const { title, date, description, slug } = post\n\n  return (\n    <li key={slug} className=\"py-6\">\n      <article className=\"space-y-2\">\n        <dl>\n          <dt className=\"sr-only\">Published on</dt>\n          <dd className=\"text-sm font-medium text-gray-500 leading-6\">\n            <time dateTime={Date(date)}>{date}</time>\n          </dd>\n        </dl>\n        <Link\n          to={slug}\n          className=\"inline-block hover:underline\"\n          aria-label={`Read \"${title}\"`}\n        >\n          <H2>{title}</H2>\n        </Link>\n        <p className=\"text-gray-500\">{description}</p>\n      </article>\n    </li>\n  )\n}\n\nconst Post = ({ post }) => {\n  const { title, date, slug, excerpt } = post\n\n  return (\n    <li key={slug} className=\"py-12\">\n      <article className=\"space-y-2\">\n        <dl>\n          <dt className=\"sr-only\">Published on</dt>\n          <dd className=\"text-base font-medium text-gray-500 leading-6\">\n            <time dateTime={Date(date)}>{date}</time>\n          </dd>\n        </dl>\n        <div className=\"space-y-5\">\n          <div className=\"space-y-6\">\n            <Link to={slug} aria-label={`Read \"${title}\"`}>\n              <H2>{title}</H2>\n            </Link>\n            <div\n              className=\"text-gray-500 prose max-w-none\"\n              dangerouslySetInnerHTML={{ __html: excerpt }}\n            />\n          </div>\n          <div>\n            <Link\n              to={slug}\n              className=\"text-base font-bold text-blue-600 no-underline hover:text-blue-400\"\n              aria-label={`Read \"${title}\"`}\n            >\n              <span className=\"mr-1\">Read article -&gt;</span>\n            </Link>\n          </div>\n        </div>\n      </article>\n    </li>\n  )\n}\n\nexport { Post, ShortPost }\n","import React from 'react'\n\nimport { Post, ShortPost } from './Post'\n\nconst Posts = ({ posts = [], short }) => {\n  if (!posts.length) return null\n\n  return (\n    <ul className=\"divide-y divide-gray-200\">\n      {posts.map((post) =>\n        short ? (\n          <ShortPost key={post.slug} post={post} />\n        ) : (\n          <Post key={post.slug} post={post} />\n        )\n      )}\n    </ul>\n  )\n}\n\nexport { Posts }\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { Container } from './Container'\nimport { H1 } from './Headings'\n\nexport const Section = ({ title, link, children, ...props }) => (\n  <Container {...props}>\n    <div className=\"flex items-baseline justify-between\">\n      <H1>{title}</H1>\n      {link?.to && (\n        <Link\n          to={link.to}\n          className=\"text-xl font-bold text-blue-600 no-underline sm:text-2xl hover:text-blue-400\"\n          aria-label={`link to ${link.to}`}\n        >\n          <span>{link.text} -&gt;</span>\n        </Link>\n      )}\n    </div>\n    {children}\n  </Container>\n)\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nimport { Layout } from '../components/Layout'\nimport { SEO } from '../components/SEO'\nimport { Posts } from '../components/Posts'\nimport { Section } from '../components/Section'\n\nconst query = graphql`\n  query {\n    articles: allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { template: { eq: \"post\" }, draft: { ne: true } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            excerpt\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n\nconst ArticlesPage = ({ location }) => {\n  const { site, articles } = useStaticQuery(query)\n  const posts = articles.edges.map(({ node }) => ({\n    title: node.frontmatter.title,\n    date: node.frontmatter.date,\n    slug: node.fields.slug,\n    excerpt: node.fields.excerpt,\n  }))\n\n  return (\n    <Layout location={location}>\n      <SEO title={`Articles | ${site.siteMetadata.title}`} />\n      <Section title=\"Articles\">\n        <Posts posts={posts} />\n      </Section>\n    </Layout>\n  )\n}\n\nexport default ArticlesPage\n"],"sourceRoot":""}