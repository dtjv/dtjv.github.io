{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["renderPost","post","slug","node","fields","frontmatter","title","date","description","key","to","className","dangerouslySetInnerHTML","__html","IndexPage","posts","data","allMarkdownRemark","edges","map","pageQuery"],"mappings":"2FAAA,8GAMMA,EAAa,SAAAC,GAAS,IAClBC,EAASD,EAAKE,KAAKC,OAAnBF,KADiB,EAEYD,EAAKE,KAAKE,YAAvCC,EAFiB,EAEjBA,MAAOC,EAFU,EAEVA,KAAMC,EAFI,EAEJA,YAErB,OACE,kBAAC,OAAD,CACEC,IAAKP,EACLQ,GAAIR,EACJS,UAAU,wDAEV,iCACE,wBAAIA,UAAU,iBAAiBL,GAC/B,uBAAGK,UAAU,mCAAmCJ,GAChD,uBAAGK,wBAAyB,CAAEC,OAAQL,QAsB/BM,UAhBG,SAAC,GAAc,IACzBC,EADwB,EAAXC,KACAC,kBAAkBC,MAGrC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,6BAASP,UAAU,uBACjB,wBAAIA,UAAU,uCAAd,iBACA,uBAAGA,UAAU,WAAb,wCAEF,6BAASA,UAAU,SATGI,EAAMI,IAAInB,MAgB/B,IAAMoB,EAAS","file":"component---src-pages-index-js-14203f4b9e5269f116d4.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport { Layout } from '../layout'\nimport { SEO } from '../components/seo'\n\nconst renderPost = post => {\n  const { slug } = post.node.fields\n  const { title, date, description } = post.node.frontmatter\n\n  return (\n    <Link\n      key={slug}\n      to={slug}\n      className=\"block rounded rounded-md px-3 py-4 hover:bg-blue-100\"\n    >\n      <article>\n        <h2 className=\"text-blue-600\">{title}</h2>\n        <p className=\"text-xs text-gray-700 uppercase\">{date}</p>\n        <p dangerouslySetInnerHTML={{ __html: description }} />\n      </article>\n    </Link>\n  )\n}\n\nconst IndexPage = ({ data }) => {\n  const posts = data.allMarkdownRemark.edges\n  const renderPosts = () => posts.map(renderPost)\n\n  return (\n    <Layout>\n      <SEO />\n      <section className=\"mt-8 pt-4 pb-4 px-3\">\n        <h1 className=\"text-3xl md:text-5xl font-extrabold\">Hi, I'm David</h1>\n        <p className=\"text-xl\">This is my personal website. Enjoy.</p>\n      </section>\n      <section className=\"mt-10\">{renderPosts()}</section>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}