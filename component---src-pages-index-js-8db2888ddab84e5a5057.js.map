{"version":3,"sources":["webpack:///./src/components/Posts.js","webpack:///./src/pages/index.js"],"names":["renderPost","post","title","date","slug","excerpt","key","className","dateTime","Date","to","aria-label","classes","dangerouslySetInnerHTML","__html","Posts","posts","length","Container","map","IndexPage","useStaticQuery","site","allMarkdownRemark","edges","filter","node","frontmatter","draft","fields","Layout","Helmet","siteMetadata","SEO"],"mappings":"mMAMMA,EAAa,SAACC,GAAU,IACpBC,EAA+BD,EAA/BC,MAAOC,EAAwBF,EAAxBE,KAAMC,EAAkBH,EAAlBG,KAAMC,EAAYJ,EAAZI,QAE3B,OACE,wBAAIC,IAAKF,EAAMG,UAAU,SACvB,6BAASA,UAAU,aACjB,4BACE,wBAAIA,UAAU,WAAd,gBACA,wBAAIA,UAAU,iDACZ,0BAAMC,SAAUC,KAAKN,IAAQA,KAGjC,yBAAKI,UAAU,aACb,yBAAKA,UAAU,aACb,kBAAC,OAAD,CACEG,GAAIN,EACJG,UAAU,mCACVI,aAAA,SAAqBT,EAArB,KAEA,kBAAC,IAAD,CAAIU,QAAQ,gBAAgBV,IAE9B,yBACEK,UAAU,iCACVM,wBAAyB,CAAEC,OAAQT,MAGvC,6BACE,kBAAC,OAAD,CACEK,GAAIN,EACJG,UAAU,qEACVI,aAAA,SAAqBT,EAArB,KAEA,0BAAMK,UAAU,QAAhB,yBASRQ,EAAQ,SAAC,GAAoB,IAAD,IAAjBC,aAAiB,MAAT,GAAS,EAChC,OAAKA,EAAMC,OAGT,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,iBACA,wBAAIX,UAAU,4BAA4BS,EAAMG,IAAInB,KAL9B,MCgBboB,UAvDG,WAAO,IAAD,EACcC,yBAAe,cAA3CC,EADc,EACdA,KA6BFN,EA9BgB,EACRO,kBA6BkBC,MAC7BC,QAAO,qBAAGC,KAAiBC,YAAYC,SACvCT,KAAI,gBAAGO,EAAH,EAAGA,KAAH,MAAe,CAClBxB,MAAOwB,EAAKC,YAAYzB,MACxBC,KAAMuB,EAAKC,YAAYxB,KACvBE,QAASqB,EAAKrB,QACdD,KAAMsB,EAAKG,OAAOzB,SAGtB,OACE,kBAAC0B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQ7B,MAAOoB,EAAKU,aAAa9B,QACjC,kBAAC+B,EAAA,EAAD,MACA,kBAACf,EAAA,EAAD,KACE,uBAAGX,UAAU,sDAAb,+HAE+D,IAC7D,kBAAC,OAAD,CAAMG,GAAG,aAAT,YAHF,iBAMF,kBAAC,EAAD,CAAOM,MAAOA","file":"component---src-pages-index-js-8db2888ddab84e5a5057.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { Container } from './Container'\nimport { H1, H2 } from './Headings'\n\nconst renderPost = (post) => {\n  const { title, date, slug, excerpt } = post\n\n  return (\n    <li key={slug} className=\"py-12\">\n      <article className=\"space-y-2\">\n        <dl>\n          <dt className=\"sr-only\">Published on</dt>\n          <dd className=\"text-base font-medium text-gray-500 leading-6\">\n            <time dateTime={Date(date)}>{date}</time>\n          </dd>\n        </dl>\n        <div className=\"space-y-5\">\n          <div className=\"space-y-6\">\n            <Link\n              to={slug}\n              className=\"text-base font-bold no-underline\"\n              aria-label={`Read \"${title}\"`}\n            >\n              <H2 classes=\"inline-block\">{title}</H2>\n            </Link>\n            <div\n              className=\"text-gray-500 prose max-w-none\"\n              dangerouslySetInnerHTML={{ __html: excerpt }}\n            />\n          </div>\n          <div>\n            <Link\n              to={slug}\n              className=\"text-base font-bold text-blue-600 no-underline hover:text-blue-400\"\n              aria-label={`Read \"${title}\"`}\n            >\n              <span className=\"mr-1\">Read article -&gt;</span>\n            </Link>\n          </div>\n        </div>\n      </article>\n    </li>\n  )\n}\n\nconst Posts = ({ posts = [] }) => {\n  if (!posts.length) return null\n\n  return (\n    <Container>\n      <H1>Articles</H1>\n      <ul className=\"divide-y divide-gray-200\">{posts.map(renderPost)}</ul>\n    </Container>\n  )\n}\n\nexport { Posts }\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { graphql, useStaticQuery, Link } from 'gatsby'\n\nimport { Layout } from '../components/Layout'\nimport { SEO } from '../components/SEO'\nimport { Posts } from '../components/Posts'\nimport { Container } from '../components/Container'\n\nconst IndexPage = () => {\n  const { site, allMarkdownRemark } = useStaticQuery(\n    graphql`\n      query {\n        allMarkdownRemark(\n          sort: { fields: [frontmatter___date], order: DESC }\n          filter: { frontmatter: { template: { eq: \"post\" } } }\n        ) {\n          edges {\n            node {\n              fields {\n                slug\n              }\n              excerpt(format: HTML)\n              frontmatter {\n                title\n                date(formatString: \"MMMM DD, YYYY\")\n                draft\n              }\n            }\n          }\n        }\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `\n  )\n  const posts = allMarkdownRemark.edges\n    .filter(({ node }) => !node.frontmatter.draft)\n    .map(({ node }) => ({\n      title: node.frontmatter.title,\n      date: node.frontmatter.date,\n      excerpt: node.excerpt,\n      slug: node.fields.slug,\n    }))\n\n  return (\n    <Layout>\n      <Helmet title={site.siteMetadata.title} />\n      <SEO />\n      <Container>\n        <p className=\"text-xl text-gray-500 sm:text-2xl prose max-w-none\">\n          Hello! I'm David, a software developer based in Oregon. On this\n          website I share my thoughts about programming and a few side{' '}\n          <Link to=\"/projects\">projects</Link> I've built.\n        </p>\n      </Container>\n      <Posts posts={posts} />\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}