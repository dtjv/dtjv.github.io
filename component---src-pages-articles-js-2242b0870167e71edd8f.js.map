{"version":3,"sources":["webpack:///./src/pages/articles.js","webpack:///./src/components/Post.js","webpack:///./src/components/Posts.js","webpack:///./src/components/Section.js"],"names":["ArticlesPage","location","useStaticQuery","site","posts","articles","edges","map","node","title","frontmatter","date","slug","fields","excerpt","siteMetadata","ShortPost","post","description","key","className","dateTime","Date","to","aria-label","Post","dangerouslySetInnerHTML","__html","Posts","short","length","Section","link","children","props","text"],"mappings":"2FAAA,4FAsDeA,UAnBM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACVC,yBA5BlB,aA4BDC,EAD6B,EAC7BA,KACFC,EAF+B,EACvBC,SACSC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,MAAe,CAC9CC,MAAOD,EAAKE,YAAYD,MACxBE,KAAMH,EAAKE,YAAYC,KACvBC,KAAMJ,EAAKK,OAAOD,KAClBE,QAASN,EAAKK,OAAOC,YAGvB,OACE,kBAAC,IAAD,CAAQb,SAAUA,GAChB,kBAAC,IAAD,CAAKQ,MAAK,cAAgBN,EAAKY,aAAaN,QAC5C,kBAAC,IAAD,CAASA,MAAM,YACb,kBAAC,IAAD,CAAOL,MAAOA,Q,qHC3ChBY,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACXR,EAAmCQ,EAAnCR,MAAOE,EAA4BM,EAA5BN,KAAMO,EAAsBD,EAAtBC,YAAaN,EAASK,EAATL,KAElC,OACE,wBAAIO,IAAKP,EAAMQ,UAAU,QACvB,6BAASA,UAAU,aACjB,4BACE,wBAAIA,UAAU,WAAd,gBACA,wBAAIA,UAAU,+CACZ,0BAAMC,SAAUC,KAAKX,IAAQA,KAGjC,kBAAC,OAAD,CACEY,GAAIX,EACJQ,UAAU,+BACVI,aAAA,SAAqBf,EAArB,KAEA,kBAAC,IAAD,KAAKA,IAEP,uBAAGW,UAAU,iBAAiBF,MAMhCO,EAAO,SAAC,GAAc,IAAZR,EAAW,EAAXA,KACNR,EAA+BQ,EAA/BR,MAAOE,EAAwBM,EAAxBN,KAAMC,EAAkBK,EAAlBL,KAAME,EAAYG,EAAZH,QAE3B,OACE,wBAAIK,IAAKP,EAAMQ,UAAU,SACvB,6BAASA,UAAU,aACjB,4BACE,wBAAIA,UAAU,WAAd,gBACA,wBAAIA,UAAU,iDACZ,0BAAMC,SAAUC,KAAKX,IAAQA,KAGjC,yBAAKS,UAAU,aACb,yBAAKA,UAAU,aACb,kBAAC,OAAD,CAAMG,GAAIX,EAAMY,aAAA,SAAqBf,EAArB,KACd,kBAAC,IAAD,KAAKA,IAEP,yBACEW,UAAU,iCACVM,wBAAyB,CAAEC,OAAQb,MAGvC,6BACE,kBAAC,OAAD,CACES,GAAIX,EACJQ,UAAU,qEACVI,aAAA,SAAqBf,EAArB,KAEA,0BAAMW,UAAU,QAAhB,yBCtDRQ,EAAQ,SAAC,GAA2B,IAAD,IAAxBxB,aAAwB,MAAhB,GAAgB,EAAZyB,EAAY,EAAZA,MAC3B,OAAKzB,EAAM0B,OAGT,wBAAIV,UAAU,4BACXhB,EAAMG,KAAI,SAACU,GAAD,OACTY,EACE,kBAAC,EAAD,CAAWV,IAAKF,EAAKL,KAAMK,KAAMA,IAEjC,kBAAC,EAAD,CAAME,IAAKF,EAAKL,KAAMK,KAAMA,QARV,O,6ICCfc,EAAU,SAAC,GAAD,IAAGtB,EAAH,EAAGA,MAAOuB,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,SAAaC,EAA7B,kDACrB,kBAAC,IAAcA,EACb,yBAAKd,UAAU,uCACb,kBAAC,IAAD,KAAKX,IACJuB,aAAA,EAAAA,EAAMT,KACL,kBAAC,OAAD,CACEA,GAAIS,EAAKT,GACTH,UAAU,+EACVI,aAAA,WAAuBQ,EAAKT,IAE5B,8BAAOS,EAAKG,KAAZ,SAILF","file":"component---src-pages-articles-js-2242b0870167e71edd8f.js","sourcesContent":["import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nimport { Layout } from '../components/Layout'\nimport { SEO } from '../components/SEO'\nimport { Posts } from '../components/Posts'\nimport { Section } from '../components/Section'\n\nconst query = graphql`\n  query {\n    articles: allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { template: { eq: \"post\" }, draft: { ne: true } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            excerpt\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n\nconst ArticlesPage = ({ location }) => {\n  const { site, articles } = useStaticQuery(query)\n  const posts = articles.edges.map(({ node }) => ({\n    title: node.frontmatter.title,\n    date: node.frontmatter.date,\n    slug: node.fields.slug,\n    excerpt: node.fields.excerpt,\n  }))\n\n  return (\n    <Layout location={location}>\n      <SEO title={`Articles | ${site.siteMetadata.title}`} />\n      <Section title=\"Articles\">\n        <Posts posts={posts} />\n      </Section>\n    </Layout>\n  )\n}\n\nexport default ArticlesPage\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { H2 } from './Headings'\n\nconst ShortPost = ({ post }) => {\n  const { title, date, description, slug } = post\n\n  return (\n    <li key={slug} className=\"py-6\">\n      <article className=\"space-y-2\">\n        <dl>\n          <dt className=\"sr-only\">Published on</dt>\n          <dd className=\"text-sm font-medium text-gray-500 leading-6\">\n            <time dateTime={Date(date)}>{date}</time>\n          </dd>\n        </dl>\n        <Link\n          to={slug}\n          className=\"inline-block hover:underline\"\n          aria-label={`Read \"${title}\"`}\n        >\n          <H2>{title}</H2>\n        </Link>\n        <p className=\"text-gray-500\">{description}</p>\n      </article>\n    </li>\n  )\n}\n\nconst Post = ({ post }) => {\n  const { title, date, slug, excerpt } = post\n\n  return (\n    <li key={slug} className=\"py-12\">\n      <article className=\"space-y-2\">\n        <dl>\n          <dt className=\"sr-only\">Published on</dt>\n          <dd className=\"text-base font-medium text-gray-500 leading-6\">\n            <time dateTime={Date(date)}>{date}</time>\n          </dd>\n        </dl>\n        <div className=\"space-y-5\">\n          <div className=\"space-y-6\">\n            <Link to={slug} aria-label={`Read \"${title}\"`}>\n              <H2>{title}</H2>\n            </Link>\n            <div\n              className=\"text-gray-500 prose max-w-none\"\n              dangerouslySetInnerHTML={{ __html: excerpt }}\n            />\n          </div>\n          <div>\n            <Link\n              to={slug}\n              className=\"text-base font-bold text-blue-600 no-underline hover:text-blue-400\"\n              aria-label={`Read \"${title}\"`}\n            >\n              <span className=\"mr-1\">Read article -&gt;</span>\n            </Link>\n          </div>\n        </div>\n      </article>\n    </li>\n  )\n}\n\nexport { Post, ShortPost }\n","import React from 'react'\n\nimport { Post, ShortPost } from './Post'\n\nconst Posts = ({ posts = [], short }) => {\n  if (!posts.length) return null\n\n  return (\n    <ul className=\"divide-y divide-gray-200\">\n      {posts.map((post) =>\n        short ? (\n          <ShortPost key={post.slug} post={post} />\n        ) : (\n          <Post key={post.slug} post={post} />\n        )\n      )}\n    </ul>\n  )\n}\n\nexport { Posts }\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { Container } from './Container'\nimport { H1 } from './Headings'\n\nexport const Section = ({ title, link, children, ...props }) => (\n  <Container {...props}>\n    <div className=\"flex items-baseline justify-between\">\n      <H1>{title}</H1>\n      {link?.to && (\n        <Link\n          to={link.to}\n          className=\"text-xl font-bold text-blue-600 no-underline sm:text-2xl hover:text-blue-400\"\n          aria-label={`link to ${link.to}`}\n        >\n          <span>{link.text} -&gt;</span>\n        </Link>\n      )}\n    </div>\n    {children}\n  </Container>\n)\n"],"sourceRoot":""}